name: 3-hour Crypto Scanner

on:
  schedule:
    - cron: "0 */3 * * *"   # every 3 hours
  workflow_dispatch:       # manual run from Actions tab

jobs:
  run-scanner:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # if you do not have requirements.txt, replace with a single line:
        # pip install requests pandas ta ccxt python-dotenv

      - name: Run scanner (with retries & rate-limit)
        env:
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          # add other secrets you stored
        run: |
          # basic rate-limit / retry wrapper in bash
          MAX_ATTEMPTS=3
          attempt=1
          while [ $attempt -le $MAX_ATTEMPTS ]; do
            echo "Attempt $attempt / $MAX_ATTEMPTS"
            # run Python script; ensure it returns non-zero on fatal errors
            python -u scanner.py && break
            rc=$?
            echo "scanner.py exited with code $rc"
            if [ $attempt -lt $MAX_ATTEMPTS ]; then
              sleep_time=$((attempt * 10))
              echo "Sleeping $sleep_time seconds before retry..."
              sleep $sleep_time
            fi
            attempt=$((attempt+1))
          done
          if [ $attempt -gt $MAX_ATTEMPTS ]; then
            echo "All attempts failed" >&2
            exit 2
          fi

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: results/*.csv
